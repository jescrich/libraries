"use strict";(self.webpackChunknestjs_toolkit_docs=self.webpackChunknestjs_toolkit_docs||[]).push([[1454],{2026:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"kafka/installation","title":"installation","description":"---","source":"@site/docs/kafka/installation.md","sourceDirName":"kafka","slug":"/kafka/installation","permalink":"/libraries/docs/kafka/installation","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Introduction","permalink":"/libraries/docs/kafka/introduction"},"next":{"title":"Configuration Reference - NestJS Kafka Client","permalink":"/libraries/docs/kafka/configuration"}}');var a=t(4848),s=t(8453);const o={sidebar_position:2},r=void 0,l={},c=[{value:"title: Installation &amp; Setup - NestJS Kafka Client\ndescription: Complete installation and setup guide for @jescrich/nestjs-kafka-client. Learn how to configure enterprise Kafka integration with SSL, SASL authentication, and production settings.\nkeywords: [NestJS Kafka Installation, Kafka Setup, SSL Configuration, SASL Authentication, Production Configuration]",id:"title-installation--setup---nestjs-kafka-clientdescription-complete-installation-and-setup-guide-for-jescrichnestjs-kafka-client-learn-how-to-configure-enterprise-kafka-integration-with-ssl-sasl-authentication-and-production-settingskeywords-nestjs-kafka-installation-kafka-setup-ssl-configuration-sasl-authentication-production-configuration",level:2},{value:"Installation",id:"installation",level:2},{value:"Basic Module Setup",id:"basic-module-setup",level:2},{value:"Import the Modules",id:"import-the-modules",level:3},{value:"Environment Configuration",id:"environment-configuration",level:3},{value:"Advanced Configuration",id:"advanced-configuration",level:3},{value:"Async Configuration",id:"async-configuration",level:2},{value:"Verification",id:"verification",level:2},{value:"Next Steps",id:"next-steps",level:2}];function d(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.hr,{}),"\n",(0,a.jsx)(e.h2,{id:"title-installation--setup---nestjs-kafka-clientdescription-complete-installation-and-setup-guide-for-jescrichnestjs-kafka-client-learn-how-to-configure-enterprise-kafka-integration-with-ssl-sasl-authentication-and-production-settingskeywords-nestjs-kafka-installation-kafka-setup-ssl-configuration-sasl-authentication-production-configuration",children:"title: Installation & Setup - NestJS Kafka Client\ndescription: Complete installation and setup guide for @jescrich/nestjs-kafka-client. Learn how to configure enterprise Kafka integration with SSL, SASL authentication, and production settings.\nkeywords: [NestJS Kafka Installation, Kafka Setup, SSL Configuration, SASL Authentication, Production Configuration]"}),"\n",(0,a.jsx)(e.h1,{id:"installation--setup",children:"Installation & Setup"}),"\n",(0,a.jsx)(e.h2,{id:"installation",children:"Installation"}),"\n",(0,a.jsx)(e.p,{children:"Install the package using npm:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",children:"npm install @jescrich/nestjs-kafka-client\n"})}),"\n",(0,a.jsx)(e.h2,{id:"basic-module-setup",children:"Basic Module Setup"}),"\n",(0,a.jsx)(e.h3,{id:"import-the-modules",children:"Import the Modules"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-typescript",children:"import { Module } from '@nestjs/common';\nimport { KafkaModule, ConsumerModule } from '@jescrich/nestjs-kafka-client';\n\n@Module({\n  imports: [\n    KafkaModule.forRoot({\n      clientId: 'my-app',\n      brokers: ['localhost:9092'],\n    }),\n    ConsumerModule,\n  ],\n})\nexport class AppModule {}\n"})}),"\n",(0,a.jsx)(e.h3,{id:"environment-configuration",children:"Environment Configuration"}),"\n",(0,a.jsx)(e.p,{children:"For production environments, use environment variables:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-typescript",children:"KafkaModule.forRoot({\n  clientId: process.env.KAFKA_CLIENT_ID || 'my-app',\n  brokers: process.env.KAFKA_BROKERS?.split(',') || ['localhost:9092'],\n  ssl: process.env.KAFKA_SSL === 'true',\n  sasl: process.env.KAFKA_USERNAME ? {\n    mechanism: 'plain',\n    username: process.env.KAFKA_USERNAME,\n    password: process.env.KAFKA_PASSWORD,\n  } : undefined,\n})\n"})}),"\n",(0,a.jsx)(e.h3,{id:"advanced-configuration",children:"Advanced Configuration"}),"\n",(0,a.jsx)(e.p,{children:"For enterprise deployments with authentication and SSL:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-typescript",children:"KafkaModule.forRoot({\n  clientId: 'my-production-app',\n  brokers: ['kafka-1.example.com:9092', 'kafka-2.example.com:9092'],\n  \n  // SSL Configuration\n  ssl: {\n    rejectUnauthorized: true,\n    ca: [fs.readFileSync('/path/to/ca-cert.pem', 'utf-8')],\n    key: fs.readFileSync('/path/to/client-key.pem', 'utf-8'),\n    cert: fs.readFileSync('/path/to/client-cert.pem', 'utf-8'),\n  },\n  \n  // SASL Authentication\n  sasl: {\n    mechanism: 'scram-sha-256',\n    username: process.env.KAFKA_USERNAME,\n    password: process.env.KAFKA_PASSWORD,\n  },\n  \n  // Connection settings\n  connectionTimeout: 3000,\n  requestTimeout: 30000,\n  retry: {\n    initialRetryTime: 100,\n    retries: 8,\n  },\n})\n"})}),"\n",(0,a.jsx)(e.h2,{id:"async-configuration",children:"Async Configuration"}),"\n",(0,a.jsx)(e.p,{children:"For dynamic configuration loading:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-typescript",children:"KafkaModule.forRootAsync({\n  imports: [ConfigModule],\n  useFactory: async (configService: ConfigService) => ({\n    clientId: configService.get('KAFKA_CLIENT_ID'),\n    brokers: configService.get('KAFKA_BROKERS').split(','),\n    ssl: configService.get('KAFKA_SSL') === 'true',\n    sasl: {\n      mechanism: 'scram-sha-256',\n      username: configService.get('KAFKA_USERNAME'),\n      password: configService.get('KAFKA_PASSWORD'),\n    },\n  }),\n  inject: [ConfigService],\n})\n"})}),"\n",(0,a.jsx)(e.h2,{id:"verification",children:"Verification"}),"\n",(0,a.jsx)(e.p,{children:"After setup, verify the connection with a simple health check:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-typescript",children:"import { KafkaHealthIndicator } from '@jescrich/nestjs-kafka-client';\n\n@Controller('health')\nexport class HealthController {\n  constructor(private kafkaHealth: KafkaHealthIndicator) {}\n\n  @Get('kafka')\n  async checkKafka() {\n    return this.kafkaHealth.isHealthy('kafka');\n  }\n}\n"})}),"\n",(0,a.jsx)(e.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.a,{href:"./producer",children:"Set up a Kafka Producer"})}),"\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.a,{href:"./consumer",children:"Create your first Consumer"})}),"\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.a,{href:"./advanced-features",children:"Explore Advanced Features"})}),"\n"]})]})}function u(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(d,{...n})}):d(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>o,x:()=>r});var i=t(6540);const a={},s=i.createContext(a);function o(n){const e=i.useContext(s);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:o(n.components),i.createElement(s.Provider,{value:e},n.children)}}}]);